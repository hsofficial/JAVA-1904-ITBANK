OOP(Oriented Object Programming)
java는 객체지향프로그래밍 언어
부품 먼저 > 조립해서 완성
부품에 해당하는 객체 먼저 생산 >>> 객체 조립

클래스(Class)
객체를 정의해 둔 것으로 객체 생성시 사용
설계도

객체(Object)
물리적으로 존재하거나 추상화 되어있는 상태로 자신만의 속성을 가지고 있음
다른것과 구분/식별 가능한 것
제품 >>> Scanner sc;

물리적 객체 > 사람 책 컴퓨터
추상적 객체 > 강의 주문 가입

객체는 속성(필드 : 변수)과 동작(메서드 : 함수)로 구성
속성(field) : 이름 나이 모델명 속도
메서드(method) : 걷는다 웃는다 운다 때린다

객체지향의 3대 특징
1.캡슐화	객체의 필드 메소드를 하나로 묶고 실제 구현 내용을 감추는 것
			외부 객체는 객체 내부의 구조를 알지 못하며 객체가 노출하여 제공하는
			필드/메서드만 사용 가능
			(관련 코드/데이터가 묶여있고 외부에서 이상한 데이터를 입력할 수 없음 / 오류 감소)
			Encapsulation
		   
2.상속 -     이미 작성된 클래스(부모 클래스 / superclass)를 물려받아 새로운 클래스를 생성
			 자식 클래스(subclass)
			 기존 코드 재활용 / 반복 코드 중복 제거
			 TV >>> IPTV
			 Inheritance
		 
3.다형성 - 	같은 타입이지만 실행 결과가 다양한 객체를  이용할 수 있는 성질
			개념적으로 동일한 작업을 하는 멤버함수들에 이름을 부여할 수 있으므로 코드가 더 간단해짐
			Polymorphism